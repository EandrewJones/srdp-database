# This docker-compose file will simultaneously launch and link all the services required
# to run the SRDP Database API.

# You may change the port mappings on the local host, but altering the within-container
# ports may break container-to-container communication unless you also change the exposures.

# NOTE: None of the containers have a volume set up. This means there is no data persistence
# for any of the databases across container deploys/destroys. If persistence is desired, you
# must set up a localhost:container volume mapping.
version: "3.9"

services:

    # MySQL Database
    DB:
        image: mysql/mysql-server:5.7
        restart: always
        env_file:
            - .env
        ports:
            # <Ports exposed> : <MySQL Port running inside container>
            # Set to 3308 since 3306 occupied by native MySQL db running on
            # Evan's server. Can set back to 3306 on production cluster
            - '3308:3306'
        expose:
            # Opens port 3306 on the container
            - '3306'
        networks:
            - dbnet
        command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        volumes:
            - ./db/custom.cnf:/etc/my.cnf.d/90-my.cnf

    # Flask App
    API:
        build:
            context: .
            args:
                - USERALE_AUTOSTART=${USERALE_AUTOSTART:-false}
        env_file:
            - .env
        depends_on:
            - DB
        links:
            # <service name> : <name within this container>
            - DB
        ports:
            - '127.0.0.1:5000:5000'
        networks:
            - dbnet



# Set up networks
networks:
    dbnet:
        external:
            name: dbnet

# Names our volume
volumes:
    my-db:
